// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voltaire;

namespace Voltaire.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20190312035652_SubscriptionId")]
    partial class SubscriptionId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Voltaire.Models.BannedIdentifier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GuildID");

                    b.Property<string>("Identifier");

                    b.HasKey("ID");

                    b.HasIndex("GuildID");

                    b.ToTable("BannedIdentifiers");
                });

            modelBuilder.Entity("Voltaire.Models.Guild", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowDirectMessage");

                    b.Property<string>("AllowedRole");

                    b.Property<string>("DiscordId");

                    b.Property<string>("SubscriptionId");

                    b.Property<bool>("UseUserIdentifiers");

                    b.Property<int>("UserIdentifierSeed");

                    b.HasKey("ID");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Voltaire.Models.BannedIdentifier", b =>
                {
                    b.HasOne("Voltaire.Models.Guild")
                        .WithMany("BannedIdentifiers")
                        .HasForeignKey("GuildID");
                });
#pragma warning restore 612, 618
        }
    }
}
